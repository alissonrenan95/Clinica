// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;

namespace ClinicaServer.Models
{
    public partial class DBClinicaContext : DbContext
    {
        public DBClinicaContext()
        {
        }

        public DBClinicaContext(DbContextOptions<DBClinicaContext> options)
            : base(options)
        {
        }

        public virtual DbSet<Atendimento> Atendimento { get; set; }
        public virtual DbSet<Examecovid> Examecovid { get; set; }
        public virtual DbSet<Examegeral> Examegeral { get; set; }
        public virtual DbSet<Paciente> Paciente { get; set; }

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            modelBuilder.UseCollation("latin1_swedish_ci")
                .HasCharSet("latin1");

            modelBuilder.Entity<Atendimento>(entity =>
            {
                entity.ToTable("atendimento");

                entity.HasIndex(e => e.Pacienteid, "Atendimento_FKIndex1");

                entity.Property(e => e.Id)
                    .HasColumnType("int(10) unsigned")
                    .HasColumnName("id");

                entity.Property(e => e.Concluido).HasColumnName("concluido");

                entity.Property(e => e.Datahoraatendimento).HasColumnName("datahoraatendimento");

                entity.Property(e => e.Pacienteid)
                    .HasColumnType("int(10) unsigned")
                    .HasColumnName("pacienteid");

                entity.HasOne(d => d.Paciente)
                    .WithMany(p => p.Atendimento)
                    .HasForeignKey(d => d.Pacienteid)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("atendimento_ibfk_1");
            });

            modelBuilder.Entity<Examecovid>(entity =>
            {
                entity.ToTable("examecovid");

                entity.HasIndex(e => e.Atendimentoid, "Examecovid_FKIndex1");

                entity.Property(e => e.Id)
                    .HasColumnType("int(10) unsigned")
                    .HasColumnName("id");

                entity.Property(e => e.Atendimentoid)
                    .HasColumnType("int(10) unsigned")
                    .HasColumnName("atendimentoid");

                entity.Property(e => e.Cansaco).HasColumnName("cansaco");

                entity.Property(e => e.Concluido).HasColumnName("concluido");

                entity.Property(e => e.Coriza).HasColumnName("coriza");

                entity.Property(e => e.Diarreia).HasColumnName("diarreia");

                entity.Property(e => e.Dificuldadedelocomocao).HasColumnName("dificuldadedelocomocao");

                entity.Property(e => e.Dificuldadederespirar).HasColumnName("dificuldadederespirar");

                entity.Property(e => e.Dordecabeca).HasColumnName("dordecabeca");

                entity.Property(e => e.Dordegarganta).HasColumnName("dordegarganta");

                entity.Property(e => e.Doresnocorpo).HasColumnName("doresnocorpo");

                entity.Property(e => e.Faltadeolfato).HasColumnName("faltadeolfato");

                entity.Property(e => e.Faltadepaladar).HasColumnName("faltadepaladar");

                entity.Property(e => e.Febre).HasColumnName("febre");

                entity.Property(e => e.Malestargeral).HasColumnName("malestargeral");

                entity.Property(e => e.Narizentupido).HasColumnName("narizentupido");

                entity.Property(e => e.Tosse).HasColumnName("tosse");

                entity.HasOne(d => d.Atendimento)
                    .WithMany(p => p.Examecovid)
                    .HasForeignKey(d => d.Atendimentoid)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("examecovid_ibfk_1");
            });

            modelBuilder.Entity<Examegeral>(entity =>
            {
                entity.ToTable("examegeral");

                entity.HasIndex(e => e.Atendimentoid, "Examegeral_FKIndex1");

                entity.Property(e => e.Id)
                    .HasColumnType("int(10) unsigned")
                    .HasColumnName("id");

                entity.Property(e => e.Atendimentoid)
                    .HasColumnType("int(10) unsigned")
                    .HasColumnName("atendimentoid");

                entity.Property(e => e.Concluido).HasColumnName("concluido");

                entity.Property(e => e.Pressaodiastolica)
                    .HasColumnType("int(10) unsigned")
                    .HasColumnName("pressaodiastolica");

                entity.Property(e => e.Pressaosistolica)
                    .HasColumnType("int(10) unsigned")
                    .HasColumnName("pressaosistolica");

                entity.Property(e => e.Pulsacao)
                    .HasColumnType("int(10) unsigned")
                    .HasColumnName("pulsacao");

                entity.Property(e => e.Respiracao)
                    .HasColumnType("int(10) unsigned")
                    .HasColumnName("respiracao");

                entity.Property(e => e.Temperatura).HasColumnName("temperatura");

                entity.HasOne(d => d.Atendimento)
                    .WithMany(p => p.Examegeral)
                    .HasForeignKey(d => d.Atendimentoid)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("examegeral_ibfk_1");
            });

            modelBuilder.Entity<Paciente>(entity =>
            {
                entity.ToTable("paciente");

                entity.HasIndex(e => e.Cpf, "Paciente_uniqueindex")
                    .IsUnique();

                entity.Property(e => e.Id)
                    .HasColumnType("int(10) unsigned")
                    .HasColumnName("id");

                entity.Property(e => e.Cpf)
                    .HasColumnType("bigint(20) unsigned")
                    .HasColumnName("cpf");

                entity.Property(e => e.Datanascimento).HasColumnName("datanascimento");

                entity.Property(e => e.Nome)
                    .IsRequired()
                    .HasMaxLength(150)
                    .HasColumnName("nome");

                entity.Property(e => e.Telefone)
                    .HasColumnType("bigint(20) unsigned")
                    .HasColumnName("telefone");

                entity.Property(e => e.Urlimagem)
                    .IsRequired()
                    .HasMaxLength(200)
                    .HasColumnName("urlimagem");
            });

            OnModelCreatingPartial(modelBuilder);
        }

        partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
    }
}